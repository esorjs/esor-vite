{
  "version": 3,
  "sources": ["../src/lifecycle.js", "../src/globals.js", "../src/utils/dom.js", "../src/hooks/arrays.js", "../src/hooks/effects.js", "../src/hooks/signals.js", "../src/utils/parser.js", "../src/templates/reconcile.js", "../src/helpers.js", "../src/logger.js", "../src/events/events.js", "../src/templates/engine.js", "../src/templates/templates.js", "../src/templates/props.js", "../src/component.js", "../src/hooks/ref.js", "../src/hooks/memo.js", "../src/hooks/store.js"],
  "sourcesContent": ["export class Lifecycle {\n    static current;\n    #lc = new Map();\n\n    constructor() {\n        Lifecycle.current = this;\n    }\n\n    #hooks(t) {\n        return this.#lc.has(t) || this.#lc.set(t, new Set()), this.#lc.get(t);\n    }\n\n    add(t, fn) {\n        this.#hooks(t).add(fn);\n        return () => this.#lc.get(t)?.delete(fn);\n    }\n    run(t, ctx) {\n        this.#lc.get(t)?.forEach((fn) => {\n            try {\n                fn.call(ctx);\n            } catch (e) {\n                ctx._catchError(e);\n            }\n        });\n    }\n    clear(t) {\n        t ? this.#lc.delete(t) : this.#lc.clear();\n    }\n}\n\nconst getLC = () =>\n    Lifecycle.current ||\n    (() => {\n        throw \"Lifecycle not initialized\";\n    })();\n\nexport const [beforeMount, onMount, beforeUpdate, onUpdate, onDestroy] = [\n    \"beforeMount\",\n    \"mount\",\n    \"beforeUpdate\",\n    \"update\",\n    \"destroy\",\n].map((t) => (fn) => getLC().add(t, fn));\n\nexport const onEffect = (fn) => {\n    const clean = fn();\n    return (\n        (clean instanceof Function && getLC().add(\"destroy\", clean)) ||\n        (() => {})\n    );\n};\n", "// Global mutable state\nconst STATE = {\n    currentEffect: null,\n    currentComponent: null,\n    pendingEffects: new Set(),\n    isEffectsFlushing: false,\n    globalEvents: {\n        handlersByType: new Map(),\n        nextId: 0,\n    },\n};\n\nexport default STATE;\n\nexport function withCurrentComponent(component, fn) {\n    const prev = STATE.currentComponent;\n    STATE.currentComponent = component;\n    try {\n        return fn();\n    } finally {\n        STATE.currentComponent = prev;\n    }\n}\n", "export function valuesChanged(val1, val2) {\n    return !Object.is(val1, val2);\n}\n\nexport const getDocumentFragment = (e) =>\n    (e instanceof DocumentFragment && e) ||\n    e?.content?.cloneNode() ||\n    document.createDocumentFragment();\n\nexport function removeChildNodesBetween(startNode, endNode) {\n    let node = startNode.nextSibling;\n    while (node && node !== endNode) {\n        const next = node.nextSibling;\n        node.parentNode.removeChild(node);\n        node = next;\n    }\n}\n\nexport const findCommentPlaceholders = (root, attr) => {\n    const w = document.createTreeWalker(root, NodeFilter.SHOW_COMMENT);\n    let [s, e] = [null, null];\n    while (w.nextNode() && !e) {\n        const n = w.currentNode;\n        if (!s && n.nodeValue === attr) s = n;\n        else if (s && n.nodeValue === `//${attr}`) e = n;\n    }\n    return [s, e];\n};\n\nexport function setupDeclarativeShadowRoot(host) {\n    const supportsDeclarative =\n        HTMLElement.prototype.hasOwnProperty(\"attachInternals\");\n    const internals = supportsDeclarative ? host.attachInternals() : null;\n\n    if (internals?.shadowRoot) host.shadowRoot = internals.shadowRoot;\n    else host.attachShadow({ mode: \"open\" });\n}\n", "// M\u00E9todos para arrays reactivas:\nconst ARRAY_METHODS = [\n    \"map\",\n    \"filter\",\n    \"find\",\n    \"findIndex\",\n    \"slice\",\n    \"concat\",\n    \"reduce\",\n    \"every\",\n    \"some\",\n    \"includes\",\n    \"push\",\n    \"pop\",\n    \"shift\",\n    \"unshift\",\n    \"splice\",\n    \"reverse\",\n    \"sort\",\n];\n\nexport function addSignalMap(arr, read) {\n    for (const method of ARRAY_METHODS) {\n        const fn = arr[method];\n        arr[method] = (...args) => {\n            const result = fn.apply(arr, args);\n            if (result instanceof Array) {\n                result.__signalArray = true;\n                result.__signal = read;\n                result.__mapFn = args[0];\n            }\n            return result;\n        };\n    }\n    return arr;\n}\n", "import STATE from \"../globals\";\n\n/**\n * Efectos pendientes se ejecutan en microtask,\n * evitando actualizaciones sin control.\n */\nexport function flushEffects() {\n    if (STATE.isEffectsFlushing) return;\n    STATE.isEffectsFlushing = true;\n\n    Promise.resolve().then(() => {\n        const effectsToRun = new Set(STATE.pendingEffects);\n        STATE.pendingEffects.clear();\n\n        effectsToRun.forEach((effect) => {\n            if (typeof effect === \"function\") {\n                effect(); // ejecuta el efecto\n            } else {\n                // Loggear error si no es una funci\u00F3n\n                console.error(\"Non-function in flushEffects:\", effect);\n            }\n        });\n\n        STATE.isEffectsFlushing = false;\n    });\n}\n\n/**\n * useEffect: registra una funci\u00F3n \"effect\" que se re-ejecuta al cambiar\n * signals le\u00EDdos durante su ejecuci\u00F3n.\n */\nexport function useEffect(fn) {\n    const effect = () => {\n        const prevEffect = STATE.currentEffect;\n        STATE.currentEffect = effect;\n        try {\n            return fn();\n        } finally {\n            STATE.currentEffect = prevEffect;\n        }\n    };\n    effect(); // Ejecuta inmediatamente la primera vez\n    return effect;\n}\n", "import STATE from \"../globals\";\nimport { valuesChanged } from \"../utils/dom\";\nimport { addSignalMap } from \"./arrays\";\nimport { flushEffects, useEffect } from \"./effects\";\n\nlet batchDepth = 0;\nconst pendingUpdates = new Set();\n\n/**\n * useSignal: crea un valor reactivo que notifica a suscriptores (effects)\n */\nexport function useSignal(initialValue) {\n    const subscriptions = new Set();\n    let value = initialValue;\n\n    const read = () => {\n        if (STATE.currentEffect) subscriptions.add(STATE.currentEffect);\n        if (Array.isArray(value)) return addSignalMap(value, read);\n        return value;\n    };\n\n    const write = (newValue) => {\n        if (!valuesChanged(value, newValue)) return;\n        value = newValue;\n\n        if (batchDepth > 0) {\n            subscriptions.forEach((sub) => pendingUpdates.add(sub));\n            return;\n        }\n        // Actualizamos en microtask\n        queueMicrotask(() => {\n            for (const effect of subscriptions) {\n                if (typeof effect === \"function\")\n                    STATE.pendingEffects.add(effect);\n            }\n            flushEffects();\n        });\n    };\n\n    read.valueOf = () => read();\n    read.toString = () => String(read());\n    read.signal = true;\n    read.cleanup = () => {\n        subscriptions.clear();\n        value = initialValue;\n    };\n\n    return [read, write];\n}\n\n/**\n * useComputed: computa un valor derivado y se actualiza cuando cambian\n * los signals usados dentro de la funci\u00F3n `fn`.\n */\nexport function useComputed(fn) {\n    const [value, setValue] = useSignal(fn());\n    useEffect(() => {\n        const newValue = fn();\n        if (valuesChanged(value(), newValue))\n            queueMicrotask(() => setValue(newValue));\n    });\n    return value;\n}\n\n/**\n * useBatch: agrupa varias escrituras de signals en un bloque at\u00F3mico,\n * generando actualizaciones una sola vez al final.\n */\nexport function useBatch(fn) {\n    batchDepth++;\n    try {\n        return fn();\n    } finally {\n        batchDepth--;\n        if (batchDepth === 0 && pendingUpdates.size) {\n            for (const effect of pendingUpdates) {\n                STATE.pendingEffects.add(effect);\n            }\n            pendingUpdates.clear();\n            flushEffects();\n        }\n    }\n}\n", "export const escapeHTML = (value) => {\n    if (value === undefined || value === null) return \"\";\n    return value.toString().replace(\n        /[&<>'\"]/g,\n        (match) =>\n            ({\n                \"&\": \"&amp;\",\n                \"<\": \"&lt;\",\n                \">\": \"&gt;\",\n                \"'\": \"&#39;\",\n                '\"': \"&quot;\",\n                \"/\": \"&#x2F;\",\n            }[match])\n    );\n};\n\nexport function cleanAttributeValue(value) {\n    if (value === undefined || value === null) return \"\";\n\n    return String(value)\n        .replace(/^[\"']|[\"']$/g, \"\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#39;\");\n}\n", "import { bindEventsInRange } from \"../helpers\";\n\nexport function reconcileArrays(startNode, endNode, oldItems, newItems, host) {\n    oldItems = [...(oldItems || [])];\n    newItems = [...(newItems || [])];\n\n    const parent = endNode.parentNode;\n    const currentNodes = collectNodes(startNode, endNode);\n    const newNodes = createOrReuseNodes(newItems, currentNodes, oldItems);\n\n    ddiff(parent, currentNodes, newNodes, endNode);\n    bindEventsInRange(host, startNode, endNode);\n    startNode.__oldItems = [...newItems];\n}\n\nfunction collectNodes(start, end) {\n    const nodes = [];\n    let current = start.nextSibling;\n    while (current && current !== end) {\n        nodes.push(current);\n        current = current.nextSibling;\n    }\n    return nodes;\n}\n\nfunction isValidDOMNode(node) {\n    return node && node.nodeType === Node.ELEMENT_NODE;\n}\n\nfunction getNodeKey(node) {\n    if (!isValidDOMNode(node)) return null;\n    return node.getAttribute(\"data-key\");\n}\n\nfunction updateNodeContent(oldNode, newNode, oldItem, newItem) {\n    if (!oldNode || !newNode || !oldItem?.template || !newItem?.template)\n        return false;\n\n    // Normalizaci\u00F3n de nodos de texto adyacentes\n    if (oldNode.firstChild?.nodeType === 3) oldNode.normalize();\n    if (newNode.firstChild?.nodeType === 3) newNode.normalize();\n\n    // Cache de nodos de texto\n    const oldTextNodes = getTextNodes(oldNode);\n    const newTextNodes = getTextNodes(newNode);\n\n    // Chequeo temprano de longitud diferente\n    if (oldTextNodes.length !== newTextNodes.length) return false;\n\n    let updated = false;\n\n    for (let i = 0, len = oldTextNodes.length; i < len; i++) {\n        const oldText = oldTextNodes[i].textContent;\n        const newText = newTextNodes[i].textContent;\n\n        if (oldText !== newText) {\n            oldTextNodes[i].textContent = newText;\n            updated = true;\n        }\n    }\n\n    return updated;\n}\n\nfunction getTextNodes(node) {\n    const textNodes = [];\n    const walker = document.createTreeWalker(\n        node,\n        NodeFilter.SHOW_TEXT,\n        null,\n        false\n    );\n\n    let currentNode;\n    while ((currentNode = walker.nextNode())) {\n        textNodes.push(currentNode);\n    }\n\n    return textNodes;\n}\n\nfunction createOrReuseNodes(items, currentNodes, oldItems) {\n    const nodeMap = new Map();\n    const oldItemsMap = new Map();\n    const keys = [items.length];\n\n    for (let i = 0, len = currentNodes.length; i < len; i++) {\n        const key = getNodeKey(currentNodes[i]);\n        if (key) nodeMap.set(key, currentNodes[i]);\n    }\n\n    for (let i = 0, len = oldItems.length; i < len; i++) {\n        oldItemsMap.set(getItemKey(oldItems[i], i), oldItems[i]);\n    }\n\n    for (let i = 0, len = items.length; i < len; i++) {\n        keys[i] = getItemKey(items[i], i);\n    }\n\n    return items.map((item, i) => {\n        const key = keys[i];\n        const existingNode = nodeMap.get(key);\n        const oldItem = oldItemsMap.get(key);\n\n        if (existingNode?.nodeType === 1) {\n            if (!oldItem || hasChanged(oldItem, item)) {\n                const newNode = createNode(item, key);\n                if (updateNodeContent(existingNode, newNode, oldItem, item)) {\n                    copyEventAttributes(existingNode, newNode);\n                    return existingNode;\n                }\n                return newNode;\n            }\n            return existingNode;\n        }\n\n        return createNode(item, key);\n    });\n}\n\nfunction hasChanged(oldItem, newItem) {\n    if (!oldItem || !newItem) return true;\n\n    if (oldItem?.template && newItem?.template) {\n        const oldValues = extractDynamicValues(oldItem);\n        const newValues = extractDynamicValues(newItem);\n        return !areValuesEqual(oldValues, newValues);\n    }\n\n    return !areValuesEqual(oldItem, newItem);\n}\n\nfunction extractDynamicValues(item) {\n    const template = item?.template;\n    if (!template) return null;\n\n    const values = [];\n    const fragment = template.cloneNode(true); // Clonar para evitar efectos secundarios\n    const walker = document.createTreeWalker(\n        fragment,\n        NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT,\n        {\n            acceptNode(node) {\n                 if (node.nodeType === 3) {\n                     return node.textContent.trim().length > 0\n                        ? NodeFilter.FILTER_ACCEPT\n                        : NodeFilter.FILTER_SKIP;\n                }\n                return NodeFilter.FILTER_ACCEPT; // Aceptar todos los elementos\n            },\n        }\n    );\n\n    let node;\n    while ((node = walker.nextNode())) {\n        if (node.nodeType === 3) values.push(node.textContent);\n        else {\n            const attrs = node.attributes;\n            for (let i = 0, len = attrs.length; i < len; i++) {\n                const value = attrs[i].value;\n                if (value.includes(\"${\")) values[values.length] = value;\n            }\n        }\n    }\n\n    return values;\n}\n\nfunction areValuesEqual(a, b) {\n    if (a === b) return true;\n    if (!a || !b) return false;\n    if (typeof a !== typeof b) return false;\n\n    if (Array.isArray(a) && Array.isArray(b)) {\n        return (\n            a.length === b.length &&\n            a.every((val, idx) => areValuesEqual(val, b[idx]))\n        );\n    }\n\n    if (typeof a === \"object\") {\n        const keysA = Object.keys(a);\n        const keysB = Object.keys(b);\n\n        if (keysA.length !== keysB.length) return false;\n\n        return keysA.every((key) => areValuesEqual(a[key], b[key]));\n    }\n\n    return String(a) === String(b);\n}\n\nfunction copyEventAttributes(oldNode, newNode) {\n    if (!isValidDOMNode(oldNode) || !isValidDOMNode(newNode)) return;\n\n    const EVENT_PREFIX = \"data-event-\";\n\n    const attributes = oldNode.attributes;\n    for (let i = attributes.length; i--; ) {\n        const attr = attributes[i];\n        if (attr.name.lastIndexOf(EVENT_PREFIX, 0) === 0)\n            newNode.setAttribute(attr.name, attr.value);\n    }\n}\n\nfunction getItemKey(item, index) {\n    if (item?.template) {\n        const el = item.template.firstElementChild;\n        if (item.id) return `item-${item.id}`;\n        if (el && isValidDOMNode(el)) {\n            const keyAttr = el.getAttribute(\"key\");\n            if (keyAttr) return keyAttr;\n        }\n        return `template-${index}`;\n    }\n\n    if (item && typeof item === \"object\") {\n        if (item.id) return `item-${item.id}`;\n        try {\n            return `item-${index}-${JSON.stringify(item)}`;\n        } catch {\n            return `item-${index}`;\n        }\n    }\n\n    return `item-${index}-${String(item)}`;\n}\n\nfunction createNode(item, key) {\n    let node;\n\n    if (item?.template) {\n        const content = item.template.cloneNode(true);\n        node = content.firstElementChild || document.createElement(\"div\");\n    } else {\n        node = document.createElement(\"div\");\n        node.textContent = String(item);\n    }\n\n    if (isValidDOMNode(node)) {\n        node.setAttribute(\"data-key\", key);\n    }\n\n    return node;\n}\n\nfunction ddiff(parent, current, newList, refNode) {\n    let aStart = 0,\n        aEnd = current.length,\n        bStart = 0,\n        bEnd = newList.length,\n        after = (aEnd > 0 && current[aEnd - 1].nextSibling) || refNode,\n        map = null;\n\n    if (aEnd === 0) {\n        for (let i = 0; i < bEnd; i++) parent.insertBefore(newList[i], after);\n        return;\n    }\n    if (bEnd === 0) {\n        while (aStart < aEnd) parent.removeChild(current[aStart++]);\n        return;\n    }\n\n    while (aStart < aEnd || bStart < bEnd) {\n        if (current[aStart] === newList[bStart]) {\n            aStart++;\n            bStart++;\n            continue;\n        }\n\n        while (current[aEnd - 1] === newList[bEnd - 1]) {\n            aEnd--;\n            bEnd--;\n        }\n\n        if (aStart === aEnd) {\n            const node =\n                bEnd < newList.length\n                    ? bStart\n                        ? newList[bStart - 1].nextSibling\n                        : newList[bEnd - bStart]\n                    : after;\n            while (bStart < bEnd) parent.insertBefore(newList[bStart++], node);\n        } else if (bStart === bEnd) {\n            while (aStart < aEnd) {\n                if (!map || !map.has(current[aStart]))\n                    parent.removeChild(current[aStart]);\n                aStart++;\n            }\n        } else if (\n            current[aStart] === newList[bEnd - 1] &&\n            newList[bStart] === current[aEnd - 1]\n        ) {\n            const node = current[--aEnd].nextSibling;\n            parent.insertBefore(\n                newList[bStart++],\n                current[aStart++].nextSibling\n            );\n            parent.insertBefore(newList[--bEnd], node);\n            current[aEnd] = newList[bEnd];\n        } else {\n            if (!map) {\n                map = new Map();\n                for (let i = bStart; i < bEnd; i++) map.set(newList[i], i);\n            }\n            const index = map.get(current[aStart]);\n            if (index == null) {\n                parent.removeChild(current[aStart++]);\n            } else if (bStart < index && index < bEnd) {\n                let sequence = 1;\n                while (\n                    aStart + sequence < aEnd &&\n                    index + sequence < bEnd &&\n                    current[aStart + sequence] === newList[index + sequence]\n                )\n                    sequence++;\n                if (sequence > index - bStart) {\n                    const node = current[aStart];\n                    while (bStart < index)\n                        parent.insertBefore(newList[bStart++], node);\n                } else\n                    parent.replaceChild(newList[bStart++], current[aStart++]);\n            } else aStart++;\n        }\n    }\n}\n", "import STATE, { withCurrentComponent } from \"./globals\";\nimport { handleSignalBinding } from \"./templates/templates\";\nimport { findCommentPlaceholders } from \"./utils/dom\";\nimport { reconcileArrays } from \"./templates/reconcile\";\nimport { useEffect } from \"./hooks/effects\";\n\nexport function bindSignalToElement(instance, signal, updateFn) {\n    const effect = useEffect(() => {\n        if (instance._isUpdating) return;\n        instance._isUpdating = true;\n        try {\n            updateFn(signal());\n        } finally {\n            instance._isUpdating = false;\n        }\n    });\n    instance._cleanup.add(effect);\n}\n\nexport function bindEventsInRange(instance, startNode, endNode) {\n    const { shadowRoot } = instance;\n    const elements = getElementsInRange(shadowRoot, startNode, endNode);\n    bindEvents(instance, elements);\n}\n\nexport function getElementsInRange(shadowRoot, startNode, endNode) {\n    const elements = [];\n    const walker = document.createTreeWalker(\n        shadowRoot,\n        NodeFilter.SHOW_ELEMENT,\n        null\n    );\n\n    if (!startNode && !endNode) {\n        while (walker.nextNode()) elements.push(walker.currentNode);\n    } else {\n        const startPoint = startNode?.nextSibling || shadowRoot.firstChild;\n        if (!startPoint) return elements;\n\n        walker.currentNode = startPoint;\n        do {\n            if (walker.currentNode === endNode) break;\n            elements.push(walker.currentNode);\n        } while (walker.nextNode());\n    }\n\n    return elements;\n}\n\nexport function bindEvents(instance, elements) {\n    for (const el of elements) {\n        for (const attr of Array.from(el.attributes)) {\n            if (!attr.name.startsWith(\"data-event-\")) continue;\n            const event = attr.name.replace(\"data-event-\", \"\");\n            const handlerId = parseInt(attr.value, 10);\n\n            // Verificar si el handler a\u00FAn existe antes de vincular\n            const eventHandler = STATE.globalEvents.handlersByType\n                .get(event)\n                ?.get(handlerId);\n\n            if (typeof eventHandler === \"function\") {\n                el.addEventListener(event, (...args) =>\n                    withCurrentComponent(instance, () =>\n                        eventHandler.call(instance, ...args)\n                    )\n                );\n                el.removeAttribute(attr.name);\n            }\n        }\n    }\n}\n\nexport function setupSignals(instance, signals) {\n    if (!signals) return;\n    signals.forEach(({ type, signal, bindAttr, attributeName }) => {\n        if (type === \"attribute\") {\n            const el = instance.shadowRoot.querySelector(`[${bindAttr}]`);\n            if (!el) return;\n            el.removeAttribute(bindAttr);\n            bindSignalToElement(instance, signal, (val) => {\n                const strVal = String(val);\n                if (el.getAttribute(attributeName) !== strVal)\n                    el.setAttribute(attributeName, strVal);\n            });\n        } else if (type === \"array\") {\n            const [startNode, endNode] = findCommentPlaceholders(\n                instance.shadowRoot,\n                bindAttr\n            );\n            if (!startNode || !endNode) return;\n            bindSignalToElement(instance, signal, (newVal) => {\n                const oldVal = startNode.__oldItems || [];\n                reconcileArrays(\n                    startNode,\n                    endNode,\n                    oldVal,\n                    Array.isArray(newVal) ? newVal : [],\n                    instance\n                );\n            });\n        } else if (type === \"text\" || type === \"expression\") {\n            handleSignalBinding({ host: instance, type, signal, bindAttr });\n        }\n    });\n}\n\nexport function setupRefs(instance, refs) {\n    if (!refs) return;\n    for (const [i, refFn] of refs.entries()) {\n        const el = instance.shadowRoot.querySelector(`[data-ref-${i}]`);\n        if (!el) continue;\n        el.removeAttribute(`data-ref-${i}`);\n        refFn(el);\n    }\n}\n", "import STATE from \"./globals\";\n\nconst STYLES = {\n    info: { color: \"#0066cc\", icon: \"\u2139\uFE0F\" },\n    warn: { color: \"#FFA500\", icon: \"\u26A0\uFE0F\" },\n    error: { color: \"#FF0000\", icon: \"\uD83D\uDEAB\" },\n};\n\nconst log = (type = \"info\", message = \"\", ...args) => {\n    if (!STYLES[type]) type = \"info\";\n\n    console.groupCollapsed(\n        `%c[ESOR ${STYLES[type].icon}${capitalize(type)}] ${message}`,\n        `color: ${STYLES[type].color}; font-weight: bold;`\n    );\n\n    console[type]({\n        message,\n        component: STATE.currentComponent?.constructor?.name || \"Unknown\",\n        time: new Date().toISOString(),\n        data: args.length ? args : undefined,\n    });\n\n    console[type === \"error\" ? \"trace\" : \"debug\"]();\n    console.groupEnd();\n};\n\nconst capitalize = (s) => (s ? s.charAt(0).toUpperCase() + s.slice(1) : \"\");\n\nexport const info = (...args) => log(\"info\", ...args);\nexport const warn = (...args) => log(\"warn\", ...args);\nexport const error = (...args) => log(\"error\", ...args);\n", "import STATE from \"../globals\";\nimport { error } from \"../logger\";\n\nconst eventCache = new Map();\n\nexport function registerEvent(type, handler) {\n    if (!type || typeof handler !== \"function\") {\n        error(\"Invalid event registration parameters\");\n        return -1;\n    }\n\n    let typeCache = eventCache.get(type);\n    if (!typeCache) {\n        typeCache = new Map();\n        eventCache.set(type, typeCache);\n    }\n\n    let handlers = STATE.globalEvents.handlersByType.get(type);\n    if (!handlers) {\n        handlers = new Map();\n        STATE.globalEvents.handlersByType.set(type, handlers);\n    }\n\n    const id = STATE.globalEvents.nextId++;\n\n    // Registrar en el componente actual si existe\n    const comp = STATE.currentComponent;\n    if (comp) comp._eventIds.push({ type, id });\n\n    handlers.set(id, handler);\n    typeCache.set(id, handler);\n\n    return id;\n}\n\nexport function clearEventHandler(type, id) {\n    const handlers = STATE.globalEvents.handlersByType.get(type);\n    if (handlers) {\n        handlers.delete(id);\n        if (handlers.size === 0) STATE.globalEvents.handlersByType.delete(type);\n\n        const typeCache = eventCache.get(type);\n        if (typeCache) {\n            typeCache.delete(id);\n            if (typeCache.size === 0) eventCache.delete(type);\n        }\n    }\n}\n\nexport function useEmit(name, detail) {\n    const comp = STATE.currentComponent;\n    if (!comp) {\n        error(\"useEmit must be used within a component\");\n        return null;\n    }\n\n    const event = new CustomEvent(name, {\n        detail,\n        bubbles: true,\n        composed: true,\n        cancelable: true,\n    });\n\n    event.__esor = {\n        name,\n        detail,\n        receivedBy: [],\n        timestamp: Date.now(),\n    };\n\n    comp.dispatchEvent(event);\n    return event;\n}\n", "import { registerEvent } from \"../events/events\";\nimport { escapeHTML } from \"../utils/parser\";\n\nconst attrReg = /\\s(\\w[\\w-]*)=([\"'])?(?:(?!\\2).)*$/;\nconst refReg = /ref=([\"'])?\\s*$/;\nconst evtReg = /(@\\w+)=([\"'])?\\s*$/;\nconst qReg = /([\"'])\\s*$/;\nconst rawTags = /^(script|style|textarea|title)$/i;\n\nconst trimQuote = (s) => s.replace(qReg, \"\");\nconst getQuote = (s) => (s.charAt(s.length - 1) === '\"' ? '\"' : \"'\");\nexport const isTemplateObject = (o) => o && typeof o === \"object\" && o.template;\n\nfunction injectRef(fn, hStr, i, refs) {\n    const q = getQuote(hStr);\n    refs.set(i, fn);\n    return hStr.replace(refReg, `data-ref-${i}=${q}true${q}`);\n}\nfunction injectEvent(fn, eType, hStr) {\n    const q = getQuote(hStr);\n    const id = registerEvent(eType, fn);\n    fn.isEventHandler = true;\n    return hStr.replace(evtReg, `data-event-${eType}=${q}${id}${q}`);\n}\nfunction injectSignalAttr(val, aName, hStr, sIdx, signals) {\n    hStr = trimQuote(hStr);\n    const q = getQuote(hStr);\n    const initVal = typeof val === \"function\" ? val() : val;\n    const escVal = rawTags.test(aName) ? String(initVal) : escapeHTML(initVal);\n    const bindAttr = `data-bind-${sIdx}`;\n    hStr += `${escVal} '' ${bindAttr}=${q}true${q}`;\n    signals.set(sIdx, {\n        type: \"attribute\",\n        signal: val,\n        attributeName: aName,\n        bindAttr,\n    });\n    return hStr;\n}\nfunction injectExpr(val, isFn, hStr, sIdx, signals) {\n    const bA = `data-expr-${sIdx}`;\n    signals.set(sIdx, {\n        type: isFn ? \"expression\" : \"text\",\n        signal: val,\n        bindAttr: bA,\n    });\n    const out = isFn ? val() : val;\n    return `${hStr}<!--${bA}-->${escapeHTML(String(out))}<!--//${bA}-->`;\n}\nfunction injectArray(v, sIdx, signals, hStr, isSigArr, fn) {\n    const bind = `data-expr-${sIdx}`;\n    const signalEntry = {\n        type: \"array\",\n        signal: isSigArr\n            ? () => (v.__signal() || []).map(v.__mapFn || ((x) => x))\n            : typeof fn === \"function\"\n            ? fn\n            : () => v,\n        bindAttr: bind,\n    };\n\n    signals.set(sIdx, signalEntry);\n\n    const items = Array.isArray(v) ? v : [];\n    const out = items.map(processVal).join(\"\");\n    return `${hStr}<!--${bind}-->${out}<!--//${bind}-->`;\n}\nfunction processVal(v) {\n    if (v == null || v === false) return \"\";\n    if (Array.isArray(v)) return v.reduce((acc, x) => acc + processVal(x), \"\");\n    if (isTemplateObject(v))\n        return [...v.template.childNodes].reduce((acc, n) => {\n            if (n.nodeType === 1 && n.hasAttribute(\"key\")) {\n                n.setAttribute(\"data-key\", n.getAttribute(\"key\"));\n                n.removeAttribute(\"key\");\n            }\n            return acc + (n.outerHTML || n.textContent);\n        }, \"\");\n    if (v?.type === \"template-array\")\n        return v.templates.reduce((a, x) => a + processVal(x), \"\");\n    return escapeHTML(String(v));\n}\nfunction processTemplate(strs, ...vals) {\n    let hStr = \"\",\n        sMap = new Map(),\n        rMap = new Map();\n    let sIdx = 0,\n        rIdx = 0;\n\n    for (let i = 0; i < strs.length; i++) {\n        hStr += strs[i];\n        if (i < vals.length) {\n            const val = vals[i];\n            const aMatch = strs[i].match(attrReg);\n            const inAttr = !!aMatch;\n            const aName = aMatch?.[1];\n\n            // Inlined \"determineInjection\"\n            const refMatch = hStr.match(refReg),\n                evtMatch = hStr.match(evtReg),\n                ref = refMatch && typeof val === \"function\",\n                event = evtMatch && typeof val === \"function\",\n                evtType = evtMatch ? evtMatch[1].slice(1) : null;\n\n            if (ref) {\n                hStr = injectRef(val, hStr, rIdx++, rMap);\n            } else if (event) {\n                hStr = injectEvent(val, evtType, hStr);\n            } else if ((val?.signal || typeof val === \"function\") && inAttr) {\n                hStr = injectSignalAttr(val, aName, hStr, sIdx++, sMap);\n            } else if (Array.isArray(val) && val.__signalArray === true) {\n                hStr = injectArray(val, sIdx++, sMap, hStr, true);\n            } else if (val?.signal) {\n                hStr = injectExpr(val, false, hStr, sIdx++, sMap);\n            } else if (typeof val === \"function\") {\n                hStr = injectExpr(val, true, hStr, sIdx++, sMap);\n            } else if (Array.isArray(val)) {\n                hStr = injectArray(val, sIdx++, sMap, hStr, false, val);\n            } else if (val != null) {\n                hStr += processVal(val);\n            }\n        }\n    }\n\n    const t = document.createElement(\"template\");\n    t.innerHTML = hStr.trim();\n    return { template: t.content, signals: sMap, refs: rMap };\n}\nexport function evalExpr(fn) {\n    try {\n        return fn() ?? null;\n    } catch {\n        return null;\n    }\n}\n\nexport function html(strs, ...vals) {\n    return processTemplate(strs, ...vals);\n}\n", "import { bindEventsInRange, bindSignalToElement } from \"../helpers\";\nimport {\n    removeChildNodesBetween,\n    findCommentPlaceholders,\n    getDocumentFragment,\n} from \"../utils/dom\";\nimport { evalExpr, isTemplateObject } from \"./engine\";\nimport { reconcileArrays } from \"./reconcile\";\n\nconst cache = new Map();\n\nexport function cachedTemplate(key, fragmentOrTemplate) {\n    const content = getDocumentFragment(fragmentOrTemplate);\n    if (!cache.has(key)) cache.set(key, content.cloneNode(true));\n    return cache.get(key).cloneNode(true);\n}\n\nexport function bindPlaceholderSignal(host, { signal, bindAttr, renderer }) {\n    const [startNode, endNode] = findCommentPlaceholders(\n        host.shadowRoot,\n        bindAttr\n    );\n    if (!startNode || !endNode) return;\n    bindSignalToElement(host, signal, (newVal) =>\n        renderer(startNode, endNode, newVal)\n    );\n}\n\nexport function handleSignalBinding({ host, type, signal, bindAttr }) {\n    bindPlaceholderSignal(host, {\n        signal,\n        bindAttr,\n        renderer: (start, end, val) => {\n            const evaluated = type === \"expression\" ? evalExpr(() => val) : val;\n            if (evaluated != null) renderEvaluated(host, start, end, evaluated);\n        },\n    });\n}\n\nfunction renderEvaluated(host, start, end, val) {\n    if (Array.isArray(val) && val.some(isTemplateObject)) {\n        // Si el valor es una array de objetos de plantilla\n        reconcileArrays(\n            start,\n            end,\n            start.__oldItems || [],\n            val,\n            host\n        );\n        return;\n    }\n    const node = isTemplateObject(val)\n        ? val.template.cloneNode(true).firstElementChild\n        : document.createTextNode(String(val));\n    removeChildNodesBetween(start, end);\n    if (node) {\n        end.parentNode.insertBefore(node, end);\n        if (isTemplateObject(val)) bindEventsInRange(host, start, end);\n    }\n}\n\nexport const specialAttr = (n) =>\n    n && !/^(data-|@|ref|key$)/.test(n) && /^[a-z][\\w\\-_:]*$/i.test(n);\n", "import { useSignal } from \"../hooks/signals\";\nimport { cleanAttributeValue } from \"../utils/parser\";\nimport { specialAttr } from \"./templates\";\n\nfunction coerceAttrValue(raw) {\n    if (typeof raw !== \"string\") return raw;\n    const t = raw.trim();\n    if (!t) return t;\n    const low = t.toLowerCase(),\n        sp = {\n            true: true,\n            false: false,\n            null: null,\n            undefined: undefined,\n            nan: NaN,\n            infinity: Infinity,\n            \"-infinity\": -Infinity,\n        };\n    if (low in sp) return sp[low];\n    const num = Number(t);\n    if (!Number.isNaN(num)) return num;\n    try {\n        return JSON.parse(t);\n    } catch {\n        return t;\n    }\n}\n\nexport function generateSpecialAttrSignals(instance) {\n    for (const { name, value } of instance.attributes) {\n        if (!specialAttr(name)) continue;\n        const [signal, setSignal] = useSignal(\n            coerceAttrValue(cleanAttributeValue(value))\n        );\n        signal.set = setSignal;\n        instance._props[name] = signal;\n    }\n}\n\nexport function observeAttrMutations(instance) {\n    const obs = new MutationObserver((ms) => {\n        for (const m of ms) {\n            if (m.type !== \"attributes\" || !specialAttr(m.attributeName))\n                continue;\n            const sig = instance._props[m.attributeName];\n            if (sig?.set)\n                sig.set(\n                    coerceAttrValue(instance.getAttribute(m.attributeName))\n                );\n        }\n    });\n    obs.observe(instance, { attributes: true, attributeOldValue: true });\n    instance._cleanup.add(() => obs.disconnect());\n}\n\nexport function initPropsAndObserve(instance) {\n    generateSpecialAttrSignals(instance);\n    observeAttrMutations(instance);\n}\n", "import { Lifecycle } from \"./lifecycle\";\nimport STATE, { withCurrentComponent } from \"./globals\";\nimport { setupDeclarativeShadowRoot } from \"./utils/dom\";\nimport { initPropsAndObserve } from \"./templates/props\";\nimport { bindEventsInRange, setupSignals, setupRefs } from \"./helpers\";\nimport { cachedTemplate } from \"./templates/templates\";\n\nexport function component(name, setup) {\n    class EsorComponent extends HTMLElement {\n        constructor() {\n            super();\n            setupDeclarativeShadowRoot(this);\n            this._initInstanceState();\n            this.lifecycle = new Lifecycle();\n            STATE.currentComponent = this;\n            initPropsAndObserve(this);\n            this.lifecycle.run(\"beforeMount\", this);\n            this._render(); // Render inicial\n        }\n\n        _initInstanceState() {\n            this._cleanup = new Set();\n            this._isUpdating = false;\n            this._props = {};\n            this._eventIds = [];\n        }\n\n        connectedCallback() {\n            this.lifecycle.run(\"mount\", this);\n        }\n\n        disconnectedCallback() {\n            this.lifecycle.run(\"destroy\", this);\n            this._cleanup.forEach((fn) => fn());\n            this._cleanup.clear();\n            this._eventIds.forEach(({ type, id }) => {\n                clearEventHandler(type, id);\n            });\n            this._eventIds = [];\n        }\n\n        _render() {\n            withCurrentComponent(this, () => {\n                this.lifecycle.run(\"beforeUpdate\", this);\n                const setupResult = setup.call(this, this._props);\n                const { template, signals, refs } =\n                    typeof setupResult === \"function\"\n                        ? setupResult()\n                        : setupResult || {};\n\n                if (!this.shadowRoot.hasChildNodes()) {\n                    this.shadowRoot.appendChild(cachedTemplate(name, template));\n                }\n\n                setupSignals(this, signals);\n                bindEventsInRange(this);\n                setupRefs(this, refs);\n                this.lifecycle.run(\"update\", this);\n            });\n        }\n    }\n\n    customElements.define(name, EsorComponent);\n    return EsorComponent;\n}\n", "/**\n * useRef: devuelve un objeto mutable cuyo valor .current se asigna\n * al elemento DOM real.\n */\nexport function useRef() {\n    let ref = null;\n    return new Proxy(() => {}, {\n        apply: (_, __, [arg]) => (ref = arg),\n        get: (_, prop) => ref?.[prop]?.bind?.(ref) || ref?.[prop],\n        set: (_, prop, value) => (ref ? ((ref[prop] = value), true) : false),\n    });\n}\n", "import { useSignal } from \"./signals\";\nimport { useEffect } from \"./effects\";\n\n/**\n * useMemo: recalcula el valor solo cuando sus dependencias cambian.\n */\nexport function useMemo(fn) {\n    const [signal, setSignal] = useSignal();\n    useEffect(() => setSignal(fn()));\n    return signal;\n}\n", "import { useSignal } from \"./signals\";\nimport { useEffect } from \"./effects\";\nimport { error } from \"../logger\";\n\nconst STORAGE_PREFIX = \"esor-store:\";\n\n/**\n * useStore: peque\u00F1o store reactivo con persistencia opcional en localStorage\n */\nexport const useStore = (initialState, options = {}) => {\n    const storedState = options.persist\n        ? loadFromStorage(options.persist)\n        : null;\n\n    const [state, setState] = useSignal(storedState || initialState);\n    const subscribers = new Set();\n\n    if (options.persist) {\n        useEffect(() => {\n            const handleStorage = (e) => {\n                if (e.key === STORAGE_PREFIX + options.persist) {\n                    try {\n                        setState(JSON.parse(e.newValue));\n                    } catch (err) {\n                        error(`Failed to sync state: ${err.message}`);\n                    }\n                }\n            };\n            window.addEventListener(\"storage\", handleStorage);\n            return () => window.removeEventListener(\"storage\", handleStorage);\n        });\n    }\n\n    const store = {\n        setState(update) {\n            const newState =\n                typeof update === \"function\" ? update(state()) : update;\n            setState(newState);\n            if (options.persist) saveToStorage(options.persist, newState);\n            subscribers.forEach((cb) => cb(newState));\n        },\n        subscribe(callback) {\n            subscribers.add(callback);\n            return () => subscribers.delete(callback);\n        },\n        getState: state,\n    };\n\n    return [state, store];\n};\n\nfunction loadFromStorage(key) {\n    try {\n        const data = localStorage.getItem(STORAGE_PREFIX + key);\n        return data ? JSON.parse(data) : null;\n    } catch (e) {\n        error(`Failed to load state: ${e.message}`);\n        return null;\n    }\n}\n\nfunction saveToStorage(key, value) {\n    try {\n        localStorage.setItem(STORAGE_PREFIX + key, JSON.stringify(value));\n    } catch (e) {\n        error(`Failed to save state: ${e.message}`);\n    }\n}\n"],
  "mappings": "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",
  "names": ["_lc", "_Lifecycle_instances", "hooks_fn", "_Lifecycle", "__privateAdd", "fn", "__privateMethod", "__privateGet", "ctx", "e", "__name", "__publicField", "Lifecycle", "getLC", "beforeMount", "onMount", "beforeUpdate", "onUpdate", "onDestroy", "t", "onEffect", "clean", "STATE", "globals_default", "withCurrentComponent", "component", "fn", "prev", "__name", "valuesChanged", "val1", "val2", "__name", "getDocumentFragment", "removeChildNodesBetween", "startNode", "endNode", "node", "next", "findCommentPlaceholders", "root", "attr", "w", "s", "e", "n", "setupDeclarativeShadowRoot", "host", "internals", "ARRAY_METHODS", "addSignalMap", "arr", "read", "method", "fn", "args", "result", "__name", "flushEffects", "globals_default", "effectsToRun", "effect", "__name", "useEffect", "fn", "prevEffect", "batchDepth", "pendingUpdates", "useSignal", "initialValue", "subscriptions", "value", "read", "__name", "globals_default", "addSignalMap", "write", "newValue", "valuesChanged", "sub", "effect", "flushEffects", "useComputed", "fn", "setValue", "useEffect", "useBatch", "escapeHTML", "__name", "value", "match", "cleanAttributeValue", "reconcileArrays", "startNode", "endNode", "oldItems", "newItems", "host", "parent", "currentNodes", "collectNodes", "newNodes", "createOrReuseNodes", "ddiff", "bindEventsInRange", "__name", "start", "end", "nodes", "current", "isValidDOMNode", "node", "getNodeKey", "updateNodeContent", "oldNode", "newNode", "oldItem", "newItem", "oldTextNodes", "getTextNodes", "newTextNodes", "updated", "i", "len", "oldText", "newText", "textNodes", "walker", "currentNode", "items", "nodeMap", "oldItemsMap", "keys", "key", "getItemKey", "item", "existingNode", "hasChanged", "createNode", "copyEventAttributes", "oldValues", "extractDynamicValues", "newValues", "areValuesEqual", "template", "values", "fragment", "attrs", "value", "a", "b", "val", "idx", "keysA", "keysB", "EVENT_PREFIX", "attributes", "attr", "index", "el", "keyAttr", "newList", "refNode", "aStart", "aEnd", "bStart", "bEnd", "after", "map", "sequence", "bindSignalToElement", "instance", "signal", "updateFn", "effect", "useEffect", "__name", "bindEventsInRange", "startNode", "endNode", "shadowRoot", "elements", "getElementsInRange", "bindEvents", "walker", "startPoint", "el", "attr", "event", "handlerId", "eventHandler", "globals_default", "args", "withCurrentComponent", "setupSignals", "signals", "type", "bindAttr", "attributeName", "val", "strVal", "findCommentPlaceholders", "newVal", "oldVal", "reconcileArrays", "handleSignalBinding", "setupRefs", "refs", "i", "refFn", "STYLES", "log", "__name", "type", "message", "args", "capitalize", "globals_default", "s", "info", "warn", "error", "eventCache", "registerEvent", "type", "handler", "error", "typeCache", "handlers", "globals_default", "id", "comp", "__name", "clearEventHandler", "useEmit", "name", "detail", "event", "attrReg", "refReg", "evtReg", "qReg", "rawTags", "trimQuote", "__name", "s", "getQuote", "isTemplateObject", "o", "injectRef", "fn", "hStr", "i", "refs", "q", "injectEvent", "eType", "id", "registerEvent", "injectSignalAttr", "val", "aName", "sIdx", "signals", "initVal", "escVal", "escapeHTML", "bindAttr", "injectExpr", "isFn", "bA", "out", "injectArray", "v", "isSigArr", "bind", "signalEntry", "x", "processVal", "acc", "a", "processTemplate", "strs", "vals", "sMap", "rMap", "rIdx", "aMatch", "inAttr", "refMatch", "evtMatch", "ref", "event", "evtType", "t", "evalExpr", "html", "cache", "cachedTemplate", "key", "fragmentOrTemplate", "content", "getDocumentFragment", "__name", "bindPlaceholderSignal", "host", "signal", "bindAttr", "renderer", "startNode", "endNode", "findCommentPlaceholders", "bindSignalToElement", "newVal", "handleSignalBinding", "type", "start", "end", "val", "evaluated", "evalExpr", "renderEvaluated", "isTemplateObject", "reconcileArrays", "node", "removeChildNodesBetween", "bindEventsInRange", "specialAttr", "n", "coerceAttrValue", "raw", "low", "sp", "num", "__name", "generateSpecialAttrSignals", "instance", "name", "value", "specialAttr", "signal", "setSignal", "useSignal", "cleanAttributeValue", "observeAttrMutations", "obs", "ms", "m", "sig", "initPropsAndObserve", "component", "name", "setup", "_EsorComponent", "setupDeclarativeShadowRoot", "Lifecycle", "globals_default", "initPropsAndObserve", "fn", "type", "id", "withCurrentComponent", "setupResult", "template", "signals", "refs", "cachedTemplate", "setupSignals", "bindEventsInRange", "setupRefs", "__name", "EsorComponent", "useRef", "ref", "__name", "_", "__", "arg", "prop", "value", "useMemo", "fn", "signal", "setSignal", "useSignal", "useEffect", "__name", "STORAGE_PREFIX", "useStore", "__name", "initialState", "options", "storedState", "loadFromStorage", "state", "setState", "useSignal", "subscribers", "useEffect", "handleStorage", "e", "err", "error", "update", "newState", "saveToStorage", "cb", "callback", "key", "data", "value"]
}
