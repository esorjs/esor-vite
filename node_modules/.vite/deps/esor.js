// node_modules/esor/dist/esor.min.js
var X = Object.defineProperty;
var K = (e) => {
  throw TypeError(e);
};
var He = (e, t, n) => t in e ? X(e, t, { enumerable: true, configurable: true, writable: true, value: n }) : e[t] = n;
var i = (e, t) => X(e, "name", { value: t, configurable: true });
var Q = (e, t, n) => He(e, typeof t != "symbol" ? t + "" : t, n);
var Y = (e, t, n) => t.has(e) || K("Cannot " + n);
var y = (e, t, n) => (Y(e, t, "read from private field"), n ? n.call(e) : t.get(e));
var V = (e, t, n) => t.has(e) ? K("Cannot add the same private member more than once") : t instanceof WeakSet ? t.add(e) : t.set(e, n);
var G = (e, t, n) => (Y(e, t, "access private method"), n);
var m;
var v;
var Z;
var S = class S2 {
  constructor() {
    V(this, v);
    V(this, m, /* @__PURE__ */ new Map());
    S2.current = this;
  }
  add(t, n) {
    return G(this, v, Z).call(this, t).add(n), () => {
      var _a;
      return (_a = y(this, m).get(t)) == null ? void 0 : _a.delete(n);
    };
  }
  run(t, n) {
    var _a;
    (_a = y(this, m).get(t)) == null ? void 0 : _a.forEach((r) => {
      try {
        r.call(n);
      } catch (o) {
        n._catchError(o);
      }
    });
  }
  clear(t) {
    t ? y(this, m).delete(t) : y(this, m).clear();
  }
};
m = /* @__PURE__ */ new WeakMap(), v = /* @__PURE__ */ new WeakSet(), Z = i(function(t) {
  return y(this, m).has(t) || y(this, m).set(t, /* @__PURE__ */ new Set()), y(this, m).get(t);
}, "#hooks"), i(S, "Lifecycle"), Q(S, "current");
var b = S;
var L = i(() => b.current || (() => {
  throw "Lifecycle not initialized";
})(), "getLC");
var [ee, te, ne, re, oe] = ["beforeMount", "mount", "beforeUpdate", "update", "destroy"].map((e) => (t) => L().add(e, t));
var ie = i((e) => {
  let t = e();
  return t instanceof Function && L().add("destroy", t) || (() => {
  });
}, "onEffect");
var C = { currentEffect: null, currentComponent: null, pendingEffects: /* @__PURE__ */ new Set(), isEffectsFlushing: false, globalEvents: { handlersByType: /* @__PURE__ */ new Map(), nextId: 0 } };
var u = C;
function w(e, t) {
  let n = C.currentComponent;
  C.currentComponent = e;
  try {
    return t();
  } finally {
    C.currentComponent = n;
  }
}
i(w, "withCurrentComponent");
function H(e, t) {
  return !Object.is(e, t);
}
i(H, "valuesChanged");
var se = i((e) => {
  var _a;
  return e instanceof DocumentFragment && e || ((_a = e == null ? void 0 : e.content) == null ? void 0 : _a.cloneNode()) || document.createDocumentFragment();
}, "getDocumentFragment");
function ce(e, t) {
  let n = e.nextSibling;
  for (; n && n !== t; ) {
    let r = n.nextSibling;
    n.parentNode.removeChild(n), n = r;
  }
}
i(ce, "removeChildNodesBetween");
var N = i((e, t) => {
  let n = document.createTreeWalker(e, NodeFilter.SHOW_COMMENT), [r, o] = [null, null];
  for (; n.nextNode() && !o; ) {
    let c = n.currentNode;
    !r && c.nodeValue === t ? r = c : r && c.nodeValue === `//${t}` && (o = c);
  }
  return [r, o];
}, "findCommentPlaceholders");
function le(e) {
  let n = HTMLElement.prototype.hasOwnProperty("attachInternals") ? e.attachInternals() : null;
  (n == null ? void 0 : n.shadowRoot) ? e.shadowRoot = n.shadowRoot : e.attachShadow({ mode: "open" });
}
i(le, "setupDeclarativeShadowRoot");
var Pe = ["map", "filter", "find", "findIndex", "slice", "concat", "reduce", "every", "some", "includes", "push", "pop", "shift", "unshift", "splice", "reverse", "sort"];
function ae(e, t) {
  for (let n of Pe) {
    let r = e[n];
    e[n] = (...o) => {
      let c = r.apply(e, o);
      return c instanceof Array && (c.__signalArray = true, c.__signal = t, c.__mapFn = o[0]), c;
    };
  }
  return e;
}
i(ae, "addSignalMap");
function P() {
  u.isEffectsFlushing || (u.isEffectsFlushing = true, Promise.resolve().then(() => {
    let e = new Set(u.pendingEffects);
    u.pendingEffects.clear(), e.forEach((t) => {
      typeof t == "function" ? t() : console.error("Non-function in flushEffects:", t);
    }), u.isEffectsFlushing = false;
  }));
}
i(P, "flushEffects");
function h(e) {
  let t = i(() => {
    let n = u.currentEffect;
    u.currentEffect = t;
    try {
      return e();
    } finally {
      u.currentEffect = n;
    }
  }, "effect");
  return t(), t;
}
i(h, "useEffect");
var _ = 0;
var $ = /* @__PURE__ */ new Set();
function g(e) {
  let t = /* @__PURE__ */ new Set(), n = e, r = i(() => (u.currentEffect && t.add(u.currentEffect), Array.isArray(n) ? ae(n, r) : n), "read"), o = i((c) => {
    if (H(n, c)) {
      if (n = c, _ > 0) {
        t.forEach((s) => $.add(s));
        return;
      }
      queueMicrotask(() => {
        for (let s of t) typeof s == "function" && u.pendingEffects.add(s);
        P();
      });
    }
  }, "write");
  return r.valueOf = () => r(), r.toString = () => String(r()), r.signal = true, r.cleanup = () => {
    t.clear(), n = e;
  }, [r, o];
}
i(g, "useSignal");
function fe(e) {
  let [t, n] = g(e());
  return h(() => {
    let r = e();
    H(t(), r) && queueMicrotask(() => n(r));
  }), t;
}
i(fe, "useComputed");
function ue(e) {
  _++;
  try {
    return e();
  } finally {
    if (_--, _ === 0 && $.size) {
      for (let t of $) u.pendingEffects.add(t);
      $.clear(), P();
    }
  }
}
i(ue, "useBatch");
var M = i((e) => e == null ? "" : e.toString().replace(/[&<>'"]/g, (t) => ({ "&": "&amp;", "<": "&lt;", ">": "&gt;", "'": "&#39;", '"': "&quot;", "/": "&#x2F;" })[t]), "escapeHTML");
function pe(e) {
  return e == null ? "" : String(e).replace(/^["']|["']$/g, "").replace(/"/g, "&quot;").replace(/'/g, "&#39;");
}
i(pe, "cleanAttributeValue");
function F(e, t, n, r, o) {
  n = [...n || []], r = [...r || []];
  let c = t.parentNode, s = je(e, t), l = We(r, s, n);
  Xe(c, s, l, t), x(o, e, t), e.__oldItems = [...r];
}
i(F, "reconcileArrays");
function je(e, t) {
  let n = [], r = e.nextSibling;
  for (; r && r !== t; ) n.push(r), r = r.nextSibling;
  return n;
}
i(je, "collectNodes");
function A(e) {
  return e && e.nodeType === Node.ELEMENT_NODE;
}
i(A, "isValidDOMNode");
function Ue(e) {
  return A(e) ? e.getAttribute("data-key") : null;
}
i(Ue, "getNodeKey");
function qe(e, t, n, r) {
  var _a, _b;
  if (!e || !t || !(n == null ? void 0 : n.template) || !(r == null ? void 0 : r.template)) return false;
  ((_a = e.firstChild) == null ? void 0 : _a.nodeType) === 3 && e.normalize(), ((_b = t.firstChild) == null ? void 0 : _b.nodeType) === 3 && t.normalize();
  let o = de(e), c = de(t);
  if (o.length !== c.length) return false;
  let s = false;
  for (let l = 0, f = o.length; l < f; l++) {
    let a = o[l].textContent, p = c[l].textContent;
    a !== p && (o[l].textContent = p, s = true);
  }
  return s;
}
i(qe, "updateNodeContent");
function de(e) {
  let t = [], n = document.createTreeWalker(e, NodeFilter.SHOW_TEXT, null, false), r;
  for (; r = n.nextNode(); ) t.push(r);
  return t;
}
i(de, "getTextNodes");
function We(e, t, n) {
  let r = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), c = [e.length];
  for (let s = 0, l = t.length; s < l; s++) {
    let f = Ue(t[s]);
    f && r.set(f, t[s]);
  }
  for (let s = 0, l = n.length; s < l; s++) o.set(he(n[s], s), n[s]);
  for (let s = 0, l = e.length; s < l; s++) c[s] = he(e[s], s);
  return e.map((s, l) => {
    let f = c[l], a = r.get(f), p = o.get(f);
    if ((a == null ? void 0 : a.nodeType) === 1) {
      if (!p || ze(p, s)) {
        let d = ge(s, f);
        return qe(a, d, p, s) ? (Je(a, d), a) : d;
      }
      return a;
    }
    return ge(s, f);
  });
}
i(We, "createOrReuseNodes");
function ze(e, t) {
  if (!e || !t) return true;
  if ((e == null ? void 0 : e.template) && (t == null ? void 0 : t.template)) {
    let n = me(e), r = me(t);
    return !R(n, r);
  }
  return !R(e, t);
}
i(ze, "hasChanged");
function me(e) {
  let t = e == null ? void 0 : e.template;
  if (!t) return null;
  let n = [], r = t.cloneNode(true), o = document.createTreeWalker(r, NodeFilter.SHOW_TEXT | NodeFilter.SHOW_ELEMENT, { acceptNode(s) {
    return s.nodeType === 3 ? s.textContent.trim().length > 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;
  } }), c;
  for (; c = o.nextNode(); ) if (c.nodeType === 3) n.push(c.textContent);
  else {
    let s = c.attributes;
    for (let l = 0, f = s.length; l < f; l++) {
      let a = s[l].value;
      a.includes("${") && (n[n.length] = a);
    }
  }
  return n;
}
i(me, "extractDynamicValues");
function R(e, t) {
  if (e === t) return true;
  if (!e || !t || typeof e != typeof t) return false;
  if (Array.isArray(e) && Array.isArray(t)) return e.length === t.length && e.every((n, r) => R(n, t[r]));
  if (typeof e == "object") {
    let n = Object.keys(e), r = Object.keys(t);
    return n.length !== r.length ? false : n.every((o) => R(e[o], t[o]));
  }
  return String(e) === String(t);
}
i(R, "areValuesEqual");
function Je(e, t) {
  if (!A(e) || !A(t)) return;
  let n = "data-event-", r = e.attributes;
  for (let o = r.length; o--; ) {
    let c = r[o];
    c.name.lastIndexOf(n, 0) === 0 && t.setAttribute(c.name, c.value);
  }
}
i(Je, "copyEventAttributes");
function he(e, t) {
  if (e == null ? void 0 : e.template) {
    let n = e.template.firstElementChild;
    if (e.id) return `item-${e.id}`;
    if (n && A(n)) {
      let r = n.getAttribute("key");
      if (r) return r;
    }
    return `template-${t}`;
  }
  if (e && typeof e == "object") {
    if (e.id) return `item-${e.id}`;
    try {
      return `item-${t}-${JSON.stringify(e)}`;
    } catch {
      return `item-${t}`;
    }
  }
  return `item-${t}-${String(e)}`;
}
i(he, "getItemKey");
function ge(e, t) {
  let n;
  return (e == null ? void 0 : e.template) ? n = e.template.cloneNode(true).firstElementChild || document.createElement("div") : (n = document.createElement("div"), n.textContent = String(e)), A(n) && n.setAttribute("data-key", t), n;
}
i(ge, "createNode");
function Xe(e, t, n, r) {
  let o = 0, c = t.length, s = 0, l = n.length, f = c > 0 && t[c - 1].nextSibling || r, a = null;
  if (c === 0) {
    for (let p = 0; p < l; p++) e.insertBefore(n[p], f);
    return;
  }
  if (l === 0) {
    for (; o < c; ) e.removeChild(t[o++]);
    return;
  }
  for (; o < c || s < l; ) {
    if (t[o] === n[s]) {
      o++, s++;
      continue;
    }
    for (; t[c - 1] === n[l - 1]; ) c--, l--;
    if (o === c) {
      let p = l < n.length ? s ? n[s - 1].nextSibling : n[l - s] : f;
      for (; s < l; ) e.insertBefore(n[s++], p);
    } else if (s === l) for (; o < c; ) (!a || !a.has(t[o])) && e.removeChild(t[o]), o++;
    else if (t[o] === n[l - 1] && n[s] === t[c - 1]) {
      let p = t[--c].nextSibling;
      e.insertBefore(n[s++], t[o++].nextSibling), e.insertBefore(n[--l], p), t[c] = n[l];
    } else {
      if (!a) {
        a = /* @__PURE__ */ new Map();
        for (let d = s; d < l; d++) a.set(n[d], d);
      }
      let p = a.get(t[o]);
      if (p == null) e.removeChild(t[o++]);
      else if (s < p && p < l) {
        let d = 1;
        for (; o + d < c && p + d < l && t[o + d] === n[p + d]; ) d++;
        if (d > p - s) {
          let B = t[o];
          for (; s < p; ) e.insertBefore(n[s++], B);
        } else e.replaceChild(n[s++], t[o++]);
      } else o++;
    }
  }
}
i(Xe, "ddiff");
function O(e, t, n) {
  let r = h(() => {
    if (!e._isUpdating) {
      e._isUpdating = true;
      try {
        n(t());
      } finally {
        e._isUpdating = false;
      }
    }
  });
  e._cleanup.add(r);
}
i(O, "bindSignalToElement");
function x(e, t, n) {
  let { shadowRoot: r } = e, o = Ke(r, t, n);
  Qe(e, o);
}
i(x, "bindEventsInRange");
function Ke(e, t, n) {
  let r = [], o = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, null);
  if (!t && !n) for (; o.nextNode(); ) r.push(o.currentNode);
  else {
    let c = (t == null ? void 0 : t.nextSibling) || e.firstChild;
    if (!c) return r;
    o.currentNode = c;
    do {
      if (o.currentNode === n) break;
      r.push(o.currentNode);
    } while (o.nextNode());
  }
  return r;
}
i(Ke, "getElementsInRange");
function Qe(e, t) {
  var _a;
  for (let n of t) for (let r of Array.from(n.attributes)) {
    if (!r.name.startsWith("data-event-")) continue;
    let o = r.name.replace("data-event-", ""), c = parseInt(r.value, 10), s = (_a = u.globalEvents.handlersByType.get(o)) == null ? void 0 : _a.get(c);
    typeof s == "function" && (n.addEventListener(o, (...l) => w(e, () => s.call(e, ...l))), n.removeAttribute(r.name));
  }
}
i(Qe, "bindEvents");
function ye(e, t) {
  t && t.forEach(({ type: n, signal: r, bindAttr: o, attributeName: c }) => {
    if (n === "attribute") {
      let s = e.shadowRoot.querySelector(`[${o}]`);
      if (!s) return;
      s.removeAttribute(o), O(e, r, (l) => {
        let f = String(l);
        s.getAttribute(c) !== f && s.setAttribute(c, f);
      });
    } else if (n === "array") {
      let [s, l] = N(e.shadowRoot, o);
      if (!s || !l) return;
      O(e, r, (f) => {
        let a = s.__oldItems || [];
        F(s, l, a, Array.isArray(f) ? f : [], e);
      });
    } else (n === "text" || n === "expression") && xe({ host: e, type: n, signal: r, bindAttr: o });
  });
}
i(ye, "setupSignals");
function Ee(e, t) {
  if (t) for (let [n, r] of t.entries()) {
    let o = e.shadowRoot.querySelector(`[data-ref-${n}]`);
    o && (o.removeAttribute(`data-ref-${n}`), r(o));
  }
}
i(Ee, "setupRefs");
var j = { info: { color: "#0066cc", icon: "ℹ️" }, warn: { color: "#FFA500", icon: "⚠️" }, error: { color: "#FF0000", icon: "🚫" } };
var U = i((e = "info", t = "", ...n) => {
  var _a, _b;
  j[e] || (e = "info"), console.groupCollapsed(`%c[ESOR ${j[e].icon}${Ye(e)}] ${t}`, `color: ${j[e].color}; font-weight: bold;`), console[e]({ message: t, component: ((_b = (_a = u.currentComponent) == null ? void 0 : _a.constructor) == null ? void 0 : _b.name) || "Unknown", time: (/* @__PURE__ */ new Date()).toISOString(), data: n.length ? n : void 0 }), console[e === "error" ? "trace" : "debug"](), console.groupEnd();
}, "log");
var Ye = i((e) => e ? e.charAt(0).toUpperCase() + e.slice(1) : "", "capitalize");
var Ut = i((...e) => U("info", ...e), "info");
var qt = i((...e) => U("warn", ...e), "warn");
var E = i((...e) => U("error", ...e), "error");
var k = /* @__PURE__ */ new Map();
function be(e, t) {
  if (!e || typeof t != "function") return E("Invalid event registration parameters"), -1;
  let n = k.get(e);
  n || (n = /* @__PURE__ */ new Map(), k.set(e, n));
  let r = u.globalEvents.handlersByType.get(e);
  r || (r = /* @__PURE__ */ new Map(), u.globalEvents.handlersByType.set(e, r));
  let o = u.globalEvents.nextId++, c = u.currentComponent;
  return c && c._eventIds.push({ type: e, id: o }), r.set(o, t), n.set(o, t), o;
}
i(be, "registerEvent");
function Kt(e, t) {
  let n = u.globalEvents.handlersByType.get(e);
  if (n) {
    n.delete(t), n.size === 0 && u.globalEvents.handlersByType.delete(e);
    let r = k.get(e);
    r && (r.delete(t), r.size === 0 && k.delete(e));
  }
}
i(Kt, "clearEventHandler");
function Se(e, t) {
  let n = u.currentComponent;
  if (!n) return E("useEmit must be used within a component"), null;
  let r = new CustomEvent(e, { detail: t, bubbles: true, composed: true, cancelable: true });
  return r.__esor = { name: e, detail: t, receivedBy: [], timestamp: Date.now() }, n.dispatchEvent(r), r;
}
i(Se, "useEmit");
var Ge = /\s(\w[\w-]*)=(["'])?(?:(?!\2).)*$/;
var Ae = /ref=(["'])?\s*$/;
var Te = /(@\w+)=(["'])?\s*$/;
var Le = /(["'])\s*$/;
var Ze = /^(script|style|textarea|title)$/i;
var et = i((e) => e.replace(Le, ""), "trimQuote");
var q = i((e) => e.charAt(e.length - 1) === '"' ? '"' : "'", "getQuote");
var T = i((e) => e && typeof e == "object" && e.template, "isTemplateObject");
function tt(e, t, n, r) {
  let o = q(t);
  return r.set(n, e), t.replace(Ae, `data-ref-${n}=${o}true${o}`);
}
i(tt, "injectRef");
function nt(e, t, n) {
  let r = q(n), o = be(t, e);
  return e.isEventHandler = true, n.replace(Te, `data-event-${t}=${r}${o}${r}`);
}
i(nt, "injectEvent");
function rt(e, t, n, r, o) {
  n = et(n);
  let c = q(n), s = typeof e == "function" ? e() : e, l = Ze.test(t) ? String(s) : M(s), f = `data-bind-${r}`;
  return n += `${l} '' ${f}=${c}true${c}`, o.set(r, { type: "attribute", signal: e, attributeName: t, bindAttr: f }), n;
}
i(rt, "injectSignalAttr");
function ve(e, t, n, r, o) {
  let c = `data-expr-${r}`;
  o.set(r, { type: t ? "expression" : "text", signal: e, bindAttr: c });
  let s = t ? e() : e;
  return `${n}<!--${c}-->${M(String(s))}<!--//${c}-->`;
}
i(ve, "injectExpr");
function Ce(e, t, n, r, o, c) {
  let s = `data-expr-${t}`, l = { type: "array", signal: o ? () => (e.__signal() || []).map(e.__mapFn || ((p) => p)) : typeof c == "function" ? c : () => e, bindAttr: s };
  n.set(t, l);
  let a = (Array.isArray(e) ? e : []).map(I).join("");
  return `${r}<!--${s}-->${a}<!--//${s}-->`;
}
i(Ce, "injectArray");
function I(e) {
  return e == null || e === false ? "" : Array.isArray(e) ? e.reduce((t, n) => t + I(n), "") : T(e) ? [...e.template.childNodes].reduce((t, n) => (n.nodeType === 1 && n.hasAttribute("key") && (n.setAttribute("data-key", n.getAttribute("key")), n.removeAttribute("key")), t + (n.outerHTML || n.textContent)), "") : (e == null ? void 0 : e.type) === "template-array" ? e.templates.reduce((t, n) => t + I(n), "") : M(String(e));
}
i(I, "processVal");
function ot(e, ...t) {
  let n = "", r = /* @__PURE__ */ new Map(), o = /* @__PURE__ */ new Map(), c = 0, s = 0;
  for (let f = 0; f < e.length; f++) if (n += e[f], f < t.length) {
    let a = t[f], p = e[f].match(Ge), d = !!p, B = p == null ? void 0 : p[1], Ie = n.match(Ae), D = n.match(Te), Be = Ie && typeof a == "function", De = D && typeof a == "function", Ve = D ? D[1].slice(1) : null;
    Be ? n = tt(a, n, s++, o) : De ? n = nt(a, Ve, n) : ((a == null ? void 0 : a.signal) || typeof a == "function") && d ? n = rt(a, B, n, c++, r) : Array.isArray(a) && a.__signalArray === true ? n = Ce(a, c++, r, n, true) : (a == null ? void 0 : a.signal) ? n = ve(a, false, n, c++, r) : typeof a == "function" ? n = ve(a, true, n, c++, r) : Array.isArray(a) ? n = Ce(a, c++, r, n, false, a) : a != null && (n += I(a));
  }
  let l = document.createElement("template");
  return l.innerHTML = n.trim(), { template: l.content, signals: r, refs: o };
}
i(ot, "processTemplate");
function we(e) {
  try {
    return e() ?? null;
  } catch {
    return null;
  }
}
i(we, "evalExpr");
function Ne(e, ...t) {
  return ot(e, ...t);
}
i(Ne, "html");
var W = /* @__PURE__ */ new Map();
function _e(e, t) {
  let n = se(t);
  return W.has(e) || W.set(e, n.cloneNode(true)), W.get(e).cloneNode(true);
}
i(_e, "cachedTemplate");
function it(e, { signal: t, bindAttr: n, renderer: r }) {
  let [o, c] = N(e.shadowRoot, n);
  !o || !c || O(e, t, (s) => r(o, c, s));
}
i(it, "bindPlaceholderSignal");
function xe({ host: e, type: t, signal: n, bindAttr: r }) {
  it(e, { signal: n, bindAttr: r, renderer: i((o, c, s) => {
    let l = t === "expression" ? we(() => s) : s;
    l != null && st(e, o, c, l);
  }, "renderer") });
}
i(xe, "handleSignalBinding");
function st(e, t, n, r) {
  if (Array.isArray(r) && r.some(T)) {
    F(t, n, t.__oldItems || [], r, e);
    return;
  }
  let o = T(r) ? r.template.cloneNode(true).firstElementChild : document.createTextNode(String(r));
  ce(t, n), o && (n.parentNode.insertBefore(o, n), T(r) && x(e, t, n));
}
i(st, "renderEvaluated");
var z = i((e) => e && !/^(data-|@|ref|key$)/.test(e) && /^[a-z][\w\-_:]*$/i.test(e), "specialAttr");
function $e(e) {
  if (typeof e != "string") return e;
  let t = e.trim();
  if (!t) return t;
  let n = t.toLowerCase(), r = { true: true, false: false, null: null, undefined: void 0, nan: NaN, infinity: 1 / 0, "-infinity": -1 / 0 };
  if (n in r) return r[n];
  let o = Number(t);
  if (!Number.isNaN(o)) return o;
  try {
    return JSON.parse(t);
  } catch {
    return t;
  }
}
i($e, "coerceAttrValue");
function ct(e) {
  for (let { name: t, value: n } of e.attributes) {
    if (!z(t)) continue;
    let [r, o] = g($e(pe(n)));
    r.set = o, e._props[t] = r;
  }
}
i(ct, "generateSpecialAttrSignals");
function lt(e) {
  let t = new MutationObserver((n) => {
    for (let r of n) {
      if (r.type !== "attributes" || !z(r.attributeName)) continue;
      let o = e._props[r.attributeName];
      (o == null ? void 0 : o.set) && o.set($e(e.getAttribute(r.attributeName)));
    }
  });
  t.observe(e, { attributes: true, attributeOldValue: true }), e._cleanup.add(() => t.disconnect());
}
i(lt, "observeAttrMutations");
function Me(e) {
  ct(e), lt(e);
}
i(Me, "initPropsAndObserve");
function Re(e, t) {
  let r = class r extends HTMLElement {
    constructor() {
      super(), le(this), this._initInstanceState(), this.lifecycle = new b(), u.currentComponent = this, Me(this), this.lifecycle.run("beforeMount", this), this._render();
    }
    _initInstanceState() {
      this._cleanup = /* @__PURE__ */ new Set(), this._isUpdating = false, this._props = {}, this._eventIds = [];
    }
    connectedCallback() {
      this.lifecycle.run("mount", this);
    }
    disconnectedCallback() {
      this.lifecycle.run("destroy", this), this._cleanup.forEach((c) => c()), this._cleanup.clear(), this._eventIds.forEach(({ type: c, id: s }) => {
        clearEventHandler(c, s);
      }), this._eventIds = [];
    }
    _render() {
      w(this, () => {
        this.lifecycle.run("beforeUpdate", this);
        let c = t.call(this, this._props), { template: s, signals: l, refs: f } = typeof c == "function" ? c() : c || {};
        this.shadowRoot.hasChildNodes() || this.shadowRoot.appendChild(_e(e, s)), ye(this, l), x(this), Ee(this, f), this.lifecycle.run("update", this);
      });
    }
  };
  i(r, "EsorComponent");
  let n = r;
  return customElements.define(e, n), n;
}
i(Re, "component");
function Fe() {
  let e = null;
  return new Proxy(() => {
  }, { apply: i((t, n, [r]) => e = r, "apply"), get: i((t, n) => {
    var _a, _b;
    return ((_b = (_a = e == null ? void 0 : e[n]) == null ? void 0 : _a.bind) == null ? void 0 : _b.call(_a, e)) || (e == null ? void 0 : e[n]);
  }, "get"), set: i((t, n, r) => e ? (e[n] = r, true) : false, "set") });
}
i(Fe, "useRef");
function Oe(e) {
  let [t, n] = g();
  return h(() => n(e())), t;
}
i(Oe, "useMemo");
var J = "esor-store:";
var ke = i((e, t = {}) => {
  let n = t.persist ? at(t.persist) : null, [r, o] = g(n || e), c = /* @__PURE__ */ new Set();
  return t.persist && h(() => {
    let l = i((f) => {
      if (f.key === J + t.persist) try {
        o(JSON.parse(f.newValue));
      } catch (a) {
        E(`Failed to sync state: ${a.message}`);
      }
    }, "handleStorage");
    return window.addEventListener("storage", l), () => window.removeEventListener("storage", l);
  }), [r, { setState(l) {
    let f = typeof l == "function" ? l(r()) : l;
    o(f), t.persist && ft(t.persist, f), c.forEach((a) => a(f));
  }, subscribe(l) {
    return c.add(l), () => c.delete(l);
  }, getState: r }];
}, "useStore");
function at(e) {
  try {
    let t = localStorage.getItem(J + e);
    return t ? JSON.parse(t) : null;
  } catch (t) {
    return E(`Failed to load state: ${t.message}`), null;
  }
}
i(at, "loadFromStorage");
function ft(e, t) {
  try {
    localStorage.setItem(J + e, JSON.stringify(t));
  } catch (n) {
    E(`Failed to save state: ${n.message}`);
  }
}
i(ft, "saveToStorage");
export {
  ee as beforeMount,
  ne as beforeUpdate,
  Re as component,
  Ne as html,
  oe as onDestroy,
  ie as onEffect,
  te as onMount,
  re as onUpdate,
  ue as useBatch,
  fe as useComputed,
  h as useEffect,
  Se as useEmit,
  Oe as useMemo,
  Fe as useRef,
  g as useSignal,
  ke as useStore
};
//# sourceMappingURL=esor.js.map
